@page "/"
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IHttpClientFactory HttpClientFactory

<PageTitle>SQL Database Vector Search</PageTitle>

@if (markdown is null)
{
    <div class="d-flex justify-content-center">
        <Spinner Type="SpinnerType.Border" Color="SpinnerColor.Primary" />
    </div>
}
else
{
    <div class="row">
        <div class="col">
            <Markdown style="overflow-y:auto;">@markdown</Markdown>
        </div>
    </div>
}

@code
{
    private string markdown = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }

        markdown = await HttpClientFactory.CreateClient().GetStringAsync("https://raw.githubusercontent.com/marcominerva/SqlDatabaseVectorSearch/refs/heads/master/README.md");

        StateHasChanged();
    }
}